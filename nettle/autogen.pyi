# This file is auto generated (by src/generator.py).
# All changes will be lost!
import typing as t
T = t.TypeVar("T", bound="Hash")
class Hash(t.Protocol):
    def __init__(self, msg: bytes = ...) -> None: ...
    def copy(self: T) -> T: ...
    def update(self, msg: bytes) -> None: ...
class DigestableHash(Hash, t.Protocol):
    def digest(self) -> bytes: ...
    def hexdigest(self) -> str: ...
class ShakeableHash(Hash, t.Protocol):
    def shake(self, length: int) -> bytes: ...
    def shake_output(self, length: int) -> bytes: ...
class gosthash94(DigestableHash): ...
class md2(DigestableHash): ...
class md4(DigestableHash): ...
class md5(DigestableHash): ...
class ripemd160(DigestableHash): ...
class sha1(DigestableHash): ...
class sha224(DigestableHash): ...
class sha256(DigestableHash): ...
class sha512(DigestableHash): ...
class sha384(DigestableHash): ...
class sha512_224(DigestableHash): ...
class sha512_256(DigestableHash): ...
class sha3_128(ShakeableHash): ...
class sha3_224(DigestableHash): ...
class sha3_256(DigestableHash, ShakeableHash): ...
class sha3_384(DigestableHash): ...
class sha3_512(DigestableHash): ...
class streebog512(DigestableHash): ...
class streebog256(DigestableHash): ...
class sm3(DigestableHash): ...
